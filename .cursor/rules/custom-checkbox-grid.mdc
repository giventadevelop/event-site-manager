---
description:
globs:
alwaysApply: false
---
- **Consistent Checkbox and Grid/Table UI**
  - Use `.custom-checkbox` and `.custom-checkbox-tick` for all checkboxes in admin forms for a modern, accessible, and visually consistent look.
  - Use `.custom-grid-table` and `.custom-grid-cell` for any grid/table layout that needs cell borders, padding, and rounded corners (e.g., attribute checkboxes, permission matrices, etc.).

- **Rationale**
  - Ensures all checkboxes and grid/table layouts are visually consistent across admin pages.
  - Provides a modern, accessible, and touch-friendly UI.
  - Centralizes style logic for easy updates and maintenance.

- **How to Use**
  - For a group of checkboxes:
    ```jsx
    <div className="custom-grid-table">
      <div className="custom-grid-cell">
        <label className="flex flex-col items-center">
          <span className="relative flex items-center justify-center">
            <input type="checkbox" className="custom-checkbox" checked={checked} onChange={...} />
            <span className="custom-checkbox-tick">
              {checked && (
                <svg className="w-6 h-6 text-black" fill="none" stroke="currentColor" strokeWidth="4" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" d="M5 13l5 5L19 7" />
                </svg>
              )}
            </span>
          </span>
          <span className="mt-2 text-xs text-center select-none break-words max-w-[6rem]">Label</span>
        </label>
      </div>
      {/* ...more .custom-grid-cell as needed... */}
    </div>
    ```
  - Add `relative` to the parent of the checkbox for correct tick mark overlay.
  - Use `.custom-grid-table` for the container and `.custom-grid-cell` for each cell.
  - The SVG tick mark and all sizing/colors are handled by the global CSS.

- **References**
  - Styles: [`src/app/globals.css`](mdc:src/app/globals.css)
  - Example usage: [`src/components/EventForm.tsx`](mdc:src/components/EventForm.tsx)

- **Best Practices**
  - Use this pattern for all admin checkboxes and grid/table layouts for attributes, permissions, or toggles.
  - Do not use local/inline checkbox or grid styles; always use the global classes.
  - For accessibility, ensure each checkbox has a visible label and is focusable.

- **Rule Maintenance**
  - Update this rule if the global styles or SVG tick mark change.
  - Add more examples as new patterns emerge in the codebase.

